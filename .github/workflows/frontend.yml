# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Frontend CI Pipeline

on:
  push:
    paths:
      - "frontend/**"
    branches: [ "main" ]
  pull_request:
    paths:
      - "frontend/**"
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
       
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
       
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend
        
      - name: Run tests
        run: npm test
        env:
          CI: true
        working-directory: ./frontend
        
      - name: Generate build
        run: npm run build
        working-directory: ./frontend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:${{ github.sha }} .
        working-directory: ./frontend

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:${{ github.sha }}

      - name: Tag Docker image as latest
        if: success()
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:latest

      - name: Push Docker image with latest tag
        if: success()
        run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:latest

  merge-release:
    if: github.event.pull_request.merged == true  # only runs if the pull request is merged
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Fetch full history for frontend
        run: git fetch --prune --unshallow

      - name: Read and increment current version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: read_version_frontend
        run: |
          if [ ! -f frontend/VERSION ]; then
            echo "1" > frontend/VERSION  # Initialize version if it doesn't exist
          fi
          current_version=$(cat frontend/VERSION)
          next_version=$((current_version + 1))
          echo "Next version is $next_version"
          echo $next_version > frontend/VERSION
          echo "::set-output name=version::$next_version"


      - name: Commit updated version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add frontend/VERSION
          git commit -m "Bump version to v${{ steps.read_version_frontend.outputs.version }}"
          git push origin main

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for merged release
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:release-v${{ steps.read_version_frontend.outputs.version }} .
        working-directory: ./frontend

      - name: Push Docker image for merged release
        run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-frontend:release-v${{ steps.read_version_frontend.outputs.version }}