# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Backend CI Pipeline

on:
  push:
    paths:
      - "backend/**"
    branches: [ "main" ]
  pull_request:
    branches:
      - main
    types: [closed] # when a pull request is closed

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Give execute permissions to gradlew bin
      run: chmod +x gradlew
      working-directory: ./backend

    - name: Build Backend with Gradle Wrapper
      run: ./gradlew build              # runs tests too
      working-directory: ./backend

    - name: Log in to Docker Hub
      if: success()
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      if: success()
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:${{ github.sha }} .
      working-directory: ./backend

    - name: Push Docker image
      if: success()
      run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:${{ github.sha }}

    - name: Tag Docker image as latest
      if: success()
      run: docker tag ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:latest

    - name: Push Docker image with latest tag
      if: success()
      run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:latest

  merge-release:
    if: github.event.pull_request.merged == true  # only runs if the pull request is merged
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Fetch full history for frontend
        run: git fetch --prune --unshallow

      - name: Read and increment current version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: read_version_backend
        run: |
          if [ ! -f backend/VERSION ]; then
            echo "1" > backend/VERSION  # Initialize version if it doesn't exist
          fi
          current_version=$(cat backend/VERSION)
          next_version=$((current_version + 1))
          echo "Next version is $next_version"
          echo $next_version > backend/VERSION
          echo "::set-output name=version::$next_version"


      - name: Commit updated version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backend/VERSION
          git commit -m "Bump version to v${{ steps.read_version_backend.outputs.version }}"
          git push origin main

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for merged release
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:release-v${{ steps.read_version_backend.outputs.version }} .
        working-directory: ./backend

      - name: Push Docker image for merged release
        run: docker push ${{ secrets.DOCKER_USERNAME }}/price-compare-backend:release-v${{ steps.read_version_backend.outputs.version }}